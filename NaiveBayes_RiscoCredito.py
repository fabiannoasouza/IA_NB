# -*- coding: utf-8 -*-
"""3TIC - NB.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bA7E_7N-89WEe2DjprVrS-H7wD8xo57q
"""

import pandas as pd
import numpy as np
from sklearn.naive_bayes import GaussianNB

#Importando novas Bibliotecas - Métricas
from sklearn.metrics import confusion_matrix, accuracy_score, precision_score
import matplotlib.pyplot as plt
import seaborn as sns

base_risco_credito = pd.read_csv('/content/risco_credito.csv')
base_risco_credito

x_risco_credito = base_risco_credito.iloc[:, 0:4].values
x_risco_credito

y_risco_credito = base_risco_credito.iloc[:,4].values
y_risco_credito

# convertendo string em valores numéricos
from sklearn.preprocessing import LabelEncoder

label_encoder_historia = LabelEncoder()
label_encoder_divida = LabelEncoder()
label_encoder_garantias = LabelEncoder()
label_encoder_renda = LabelEncoder()

x_risco_credito[:,0] = label_encoder_historia.fit_transform(x_risco_credito[:,0])
x_risco_credito[:,1] = label_encoder_divida.fit_transform(x_risco_credito[:,1])
x_risco_credito[:,2] = label_encoder_garantias.fit_transform(x_risco_credito[:,2])
x_risco_credito[:,3] = label_encoder_renda.fit_transform(x_risco_credito[:,3])

x_risco_credito

#Treinamento
naive_risco_credito = GaussianNB()
naive_risco_credito.fit(x_risco_credito,y_risco_credito)

#gerar uma previsao
#historia: Boa (0) | divida: alta (0) | garantias: nenhuma (1) | renda > 35 (2)
#historia: Ruim (2) | divida: alta (0) | garantias: adequada (0) | renda < 15 (0)
previsao = naive_risco_credito.predict([[0,0,1,2], [2,0,0,0]])

y_pred = naive_risco_credito.predict(x_risco_credito)

previsao

matriz_confusao = confusion_matrix(y_risco_credito, y_pred)
matriz_confusao

plt.figure(figsize=(6,6))
sns.heatmap(matriz_confusao, annot=True, fmt='d', cmap='coolwarm', cbar=False)
plt.title("Matriz de Confusão")
plt.ylabel("Real")
plt.xlabel("Previsto")
plt.show()

acuracia = accuracy_score(y_risco_credito, y_pred)
print(f"Acurácia: {acuracia:.2f}")